// Code generated by go-swagger; DO NOT EDIT.

package note

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateNoteHandlerFunc turns a function with the right signature into a update note handler
type UpdateNoteHandlerFunc func(UpdateNoteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateNoteHandlerFunc) Handle(params UpdateNoteParams) middleware.Responder {
	return fn(params)
}

// UpdateNoteHandler interface for that can handle valid update note params
type UpdateNoteHandler interface {
	Handle(UpdateNoteParams) middleware.Responder
}

// NewUpdateNote creates a new http.Handler for the update note operation
func NewUpdateNote(ctx *middleware.Context, handler UpdateNoteHandler) *UpdateNote {
	return &UpdateNote{Context: ctx, Handler: handler}
}

/*UpdateNote swagger:route PUT /note/{id} note updateNote

update a note

update a note of a user

*/
type UpdateNote struct {
	Context *middleware.Context
	Handler UpdateNoteHandler
}

func (o *UpdateNote) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateNoteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
