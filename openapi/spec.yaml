swagger: "2.0"
info:
  description: "Reusable authentication server from evoke365.net"
  version: "1.0.0"
  title: "evoke365.net OpenAPI spec"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "aus.jacy@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.evoke365.net"
basePath: "/v1"
tags:
- name: "health"
  description: "Healthcheck endpoint"
- name: "user"
  description: "Operations about user"
- name: "profile"
  description: "Operations about authentication"
- name: "note"
  description: "Operations about note"
schemes:
- "https"
paths:
  /healthz:
    get:
      tags:
      - "health"
      summary: "Check if service is healthy"
      description: ""
      operationId: "healthz"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful Operation"
        "405":
          description: "Invalid input"
  /user/find/{id}:
    get:
      tags:
      - "user"
      summary: "Find user"
      description: "Find a user by User ID"
      operationId: "findUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of User"
        required: true
        type: "string"
      responses:
        "204":
          description: "user not found"
        "200":
          description: "successful operation"
        "500":
          description: "internal error"
        "400":
          description: "bad request"
  /user/forget:
    post:
      tags:
      - "user"
      summary: "start forget password process"
      description: ""
      operationId: "forgetPassword"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User ID to reset password"
        required: true
        schema:
          $ref: "#/definitions/UserForgetRequest"
      responses:
        "200":
          description: "successful operation"
        "500":
          description: "internal error"
        "400":
          description: "bad request"
  /user/password:
    post:
      tags:
      - "user"
      summary: "set new user password"
      description: ""
      operationId: "newPassword"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "set new user password"
        required: true
        schema:
          $ref: "#/definitions/UserPasswordRequest"
      responses:
        "200":
          description: "successful operation"
        "500":
          description: "internal error"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Log in a user"
        required: true
        schema:
          $ref: "#/definitions/UserLoginRequest"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid username/password supplied"
        "401":
          description: "Unauthorised user credentials"
        "500":
          description: "internal error"
  /user/signup:
    post:
      tags:
      - "user"
      summary: "Sign up a new user"
      description: ""
      operationId: "SignupUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Sign up a new user"
        required: true
        schema:
          $ref: "#/definitions/UserSignupRequests"
      responses:
        "200":
          description: "successful operation"
        "500":
          description: "internal error"
  /user/verify:
    put:
      tags:
      - "user"
      summary: "Verify a user"
      description: "This can only be done by the logged in user."
      operationId: "verifyUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/UserVerifyRequest"
      responses:
        "200":
          description: "Successful Operation"
        "400":
          description: "Invalid user supplied"
        "500":
          description: "internal error"
  /profile/authenticate:
    post:
      tags:
      - "profile"
      summary: "Autheticate a profile"
      description: "used for authetication between internal systems"
      operationId: "autheticateProfile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "token to authenticate"
        required: true
        schema:
          $ref: "#/definitions/AutheticateProfileRequest"
      responses:
        "200":
          description: "Successful Operation"
        "400":
          description: "Invalid user supplied"
        "500":
          description: "internal error"
  /profile/{id}:
    post:
      tags:
      - "profile"
      summary: "Autheticate a profile"
      description: "used for authetication between internal systems"
      operationId: "getProfile"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Profile"
        required: true
        type: "string"
      responses:
        "200":
          description: "Successful Operation"
        "204":
          description: "profile not found"
        "500":
          description: "internal error"
  /notes/{userId}:
    get:
      tags:
      - "note"
      summary: "Get Notes of a user"
      description: "Retrieve notes by User ID"
      operationId: "getNotes"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "token"
        description: "authenticated token"
        required: true
        type: "string"
        format: uuid
      - name: "userId"
        in: "path"
        description: "ID of User"
        required: true
        type: "string"
      responses:
        "204":
          description: "user not found"
        "200":
          description: "successful operation"
        "500":
          description: "internal error"
        "400":
          description: "bad request"
  /note:
    post:
      tags:
      - "note"
      summary: "user creates a new note"
      description: "user creates a new note"
      operationId: "AddNote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "token"
        description: "authenticated token"
        required: true
        type: "string"
        format: uuid
      - in: "body"
        name: "body"
        description: "the data of the note"
        required: true
        schema:
          $ref: "#/definitions/AddNoteRequest"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid request body supplied"
        "401":
          description: "Unauthorised user credentials"
        "500":
          description: "internal error"
  /note/{id}:
    put:
      tags:
      - "note"
      summary: "update a note"
      description: "update a note of a user"
      operationId: "updateNote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "token"
        description: "authenticated token"
        required: true
        type: "string"
        format: uuid
      - in: "path"
        name: "id"
        description: "ID of the note to update"
        required: true
        type: "string"
        format: uuid
      - in: "body"
        name: "body"
        description: "Updated a note"
        required: true
        schema:
          $ref: "#/definitions/UpdateNoteRequest"
      responses:
        "200":
          description: "Successful Operation"
        "400":
          description: "Invalid request data supplied"
        "401":
          description: "Unauthorised user credentials"
        "500":
          description: "internal error"
    delete:
      tags:
      - "note"
      summary: "delete a note"
      description: "delete a note of a user"
      operationId: "deleteNote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "token"
        description: "authenticated token"
        required: true
        type: "string"
        format: uuid
      - in: "path"
        name: "id"
        description: "ID of the note to delete"
        required: true
        type: "string"
        format: uuid
      responses:
        "200":
          description: "Successful Operation"
        "400":
          description: "Invalid request data supplied"
        "401":
          description: "Unauthorised user credentials"
        "500":
          description: "internal error"
definitions:
  UserForgetRequest:
    type: "object"
    properties:
      id:
        type: "string"
  UserPasswordRequest:
    type: "object"
    properties:
      email:
        type: "string"
      token:
        type: "string"
      password:
        type: "string"
  UserLoginRequest:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
  UserSignupRequests:
    type: "object"
    properties:
      email:
        type: "string"
      password: 
        type: "string"
      timezone: 
        type: "integer"
        format: "int32"
  UserVerifyRequest:
    type: "object"
    properties:
      email:
        type: "string"
      code:
        type: "string"
  AutheticateProfileRequest:
    type: "object"
    properties:
      token:
        type: "string"
  AddNoteRequest:
    type: "object"
    properties:
      title:
        type: "string"
      body:
        type: "string"
  UpdateNoteRequest:
    type: "object"
    properties:
      isImportant: 
        type: "boolean"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"